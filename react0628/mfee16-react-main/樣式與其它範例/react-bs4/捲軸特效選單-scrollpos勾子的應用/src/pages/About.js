import React from 'react'

// BreadCrumb
import MyBreadCrumb from '../components/MyBreadCrumb'

function About(props) {
  // 從App元件得到登入狀態，解構出來
  const { isAuth } = props
  return (
    <>
      <h1>關於我們</h1>
      <MyBreadCrumb />
      {isAuth ? '會員登入, XXX你好' : '未登入'}
      <p>
        在表達式中，我們有講到在表達式中有無副作用(Side
        Effect)的分別，函式也有這種區分方式。對於函式來說，具有副作用代表著可能會更動到外部環境，或是更動到傳入的參數值。函式的區分是以
        純粹(pure)函式 與 不純粹(impure)函式
        兩者來區分，但這不光只有無副作用的差異，還有其他的條件。
      </p>
      <p>
        在表達式中，我們有講到在表達式中有無副作用(Side
        Effect)的分別，函式也有這種區分方式。對於函式來說，具有副作用代表著可能會更動到外部環境，或是更動到傳入的參數值。函式的區分是以
        純粹(pure)函式 與 不純粹(impure)函式
        兩者來區分，但這不光只有無副作用的差異，還有其他的條件。
      </p>
      <p>
        在表達式中，我們有講到在表達式中有無副作用(Side
        Effect)的分別，函式也有這種區分方式。對於函式來說，具有副作用代表著可能會更動到外部環境，或是更動到傳入的參數值。函式的區分是以
        純粹(pure)函式 與 不純粹(impure)函式
        兩者來區分，但這不光只有無副作用的差異，還有其他的條件。
      </p>
      <p>
        在表達式中，我們有講到在表達式中有無副作用(Side
        Effect)的分別，函式也有這種區分方式。對於函式來說，具有副作用代表著可能會更動到外部環境，或是更動到傳入的參數值。函式的區分是以
        純粹(pure)函式 與 不純粹(impure)函式
        兩者來區分，但這不光只有無副作用的差異，還有其他的條件。
      </p>
      <p>
        在表達式中，我們有講到在表達式中有無副作用(Side
        Effect)的分別，函式也有這種區分方式。對於函式來說，具有副作用代表著可能會更動到外部環境，或是更動到傳入的參數值。函式的區分是以
        純粹(pure)函式 與 不純粹(impure)函式
        兩者來區分，但這不光只有無副作用的差異，還有其他的條件。
      </p>
      <p>
        在表達式中，我們有講到在表達式中有無副作用(Side
        Effect)的分別，函式也有這種區分方式。對於函式來說，具有副作用代表著可能會更動到外部環境，或是更動到傳入的參數值。函式的區分是以
        純粹(pure)函式 與 不純粹(impure)函式
        兩者來區分，但這不光只有無副作用的差異，還有其他的條件。
      </p>
      <p>
        在表達式中，我們有講到在表達式中有無副作用(Side
        Effect)的分別，函式也有這種區分方式。對於函式來說，具有副作用代表著可能會更動到外部環境，或是更動到傳入的參數值。函式的區分是以
        純粹(pure)函式 與 不純粹(impure)函式
        兩者來區分，但這不光只有無副作用的差異，還有其他的條件。
      </p>
      <p>
        在表達式中，我們有講到在表達式中有無副作用(Side
        Effect)的分別，函式也有這種區分方式。對於函式來說，具有副作用代表著可能會更動到外部環境，或是更動到傳入的參數值。函式的區分是以
        純粹(pure)函式 與 不純粹(impure)函式
        兩者來區分，但這不光只有無副作用的差異，還有其他的條件。
      </p>
      <p>
        在表達式中，我們有講到在表達式中有無副作用(Side
        Effect)的分別，函式也有這種區分方式。對於函式來說，具有副作用代表著可能會更動到外部環境，或是更動到傳入的參數值。函式的區分是以
        純粹(pure)函式 與 不純粹(impure)函式
        兩者來區分，但這不光只有無副作用的差異，還有其他的條件。
      </p>
      <p>
        在表達式中，我們有講到在表達式中有無副作用(Side
        Effect)的分別，函式也有這種區分方式。對於函式來說，具有副作用代表著可能會更動到外部環境，或是更動到傳入的參數值。函式的區分是以
        純粹(pure)函式 與 不純粹(impure)函式
        兩者來區分，但這不光只有無副作用的差異，還有其他的條件。
      </p>
      <p>
        在表達式中，我們有講到在表達式中有無副作用(Side
        Effect)的分別，函式也有這種區分方式。對於函式來說，具有副作用代表著可能會更動到外部環境，或是更動到傳入的參數值。函式的區分是以
        純粹(pure)函式 與 不純粹(impure)函式
        兩者來區分，但這不光只有無副作用的差異，還有其他的條件。
      </p>
      <p>
        在表達式中，我們有講到在表達式中有無副作用(Side
        Effect)的分別，函式也有這種區分方式。對於函式來說，具有副作用代表著可能會更動到外部環境，或是更動到傳入的參數值。函式的區分是以
        純粹(pure)函式 與 不純粹(impure)函式
        兩者來區分，但這不光只有無副作用的差異，還有其他的條件。
      </p>
      <p>
        在表達式中，我們有講到在表達式中有無副作用(Side
        Effect)的分別，函式也有這種區分方式。對於函式來說，具有副作用代表著可能會更動到外部環境，或是更動到傳入的參數值。函式的區分是以
        純粹(pure)函式 與 不純粹(impure)函式
        兩者來區分，但這不光只有無副作用的差異，還有其他的條件。
      </p>
      <p>
        在表達式中，我們有講到在表達式中有無副作用(Side
        Effect)的分別，函式也有這種區分方式。對於函式來說，具有副作用代表著可能會更動到外部環境，或是更動到傳入的參數值。函式的區分是以
        純粹(pure)函式 與 不純粹(impure)函式
        兩者來區分，但這不光只有無副作用的差異，還有其他的條件。
      </p>
      <p>
        在表達式中，我們有講到在表達式中有無副作用(Side
        Effect)的分別，函式也有這種區分方式。對於函式來說，具有副作用代表著可能會更動到外部環境，或是更動到傳入的參數值。函式的區分是以
        純粹(pure)函式 與 不純粹(impure)函式
        兩者來區分，但這不光只有無副作用的差異，還有其他的條件。
      </p>
      <p>
        在表達式中，我們有講到在表達式中有無副作用(Side
        Effect)的分別，函式也有這種區分方式。對於函式來說，具有副作用代表著可能會更動到外部環境，或是更動到傳入的參數值。函式的區分是以
        純粹(pure)函式 與 不純粹(impure)函式
        兩者來區分，但這不光只有無副作用的差異，還有其他的條件。
      </p>
      <p>
        在表達式中，我們有講到在表達式中有無副作用(Side
        Effect)的分別，函式也有這種區分方式。對於函式來說，具有副作用代表著可能會更動到外部環境，或是更動到傳入的參數值。函式的區分是以
        純粹(pure)函式 與 不純粹(impure)函式
        兩者來區分，但這不光只有無副作用的差異，還有其他的條件。
      </p>
      <p>
        在表達式中，我們有講到在表達式中有無副作用(Side
        Effect)的分別，函式也有這種區分方式。對於函式來說，具有副作用代表著可能會更動到外部環境，或是更動到傳入的參數值。函式的區分是以
        純粹(pure)函式 與 不純粹(impure)函式
        兩者來區分，但這不光只有無副作用的差異，還有其他的條件。
      </p>
      <p>
        在表達式中，我們有講到在表達式中有無副作用(Side
        Effect)的分別，函式也有這種區分方式。對於函式來說，具有副作用代表著可能會更動到外部環境，或是更動到傳入的參數值。函式的區分是以
        純粹(pure)函式 與 不純粹(impure)函式
        兩者來區分，但這不光只有無副作用的差異，還有其他的條件。
      </p>
      <p>
        在表達式中，我們有講到在表達式中有無副作用(Side
        Effect)的分別，函式也有這種區分方式。對於函式來說，具有副作用代表著可能會更動到外部環境，或是更動到傳入的參數值。函式的區分是以
        純粹(pure)函式 與 不純粹(impure)函式
        兩者來區分，但這不光只有無副作用的差異，還有其他的條件。
      </p>
      <p>
        在表達式中，我們有講到在表達式中有無副作用(Side
        Effect)的分別，函式也有這種區分方式。對於函式來說，具有副作用代表著可能會更動到外部環境，或是更動到傳入的參數值。函式的區分是以
        純粹(pure)函式 與 不純粹(impure)函式
        兩者來區分，但這不光只有無副作用的差異，還有其他的條件。
      </p>
    </>
  )
}

export default About
